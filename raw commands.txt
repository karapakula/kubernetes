#Disable SELinux
setenforce 0
sed -i --follow-symlinks 's/SELINUX=enforcing/SELINUX=disabled/g' /etc/sysconfig/selinux

#Enable the br_netfilter module for cluster communication
modprobe br_netfilter
echo '1' > /proc/sys/net/bridge/bridge-nf-call-iptables

#Disable swap to prevent memory allocation issues
swapoff -a
#vim /etc/fstab.orig  ->  Comment out the swap line
sudo sed -i 's/.*swap/#&/' /etc/fstab.orig

#Install the Docker prerequisites
yum install -y yum-utils device-mapper-persistent-data lvm2


#Add the Docker repo and install Docker
yum-config-manager --add-repo https://download.docker.com/linux/centos/docker-ce.repo
yum install -y docker-ce


#Conigure the Docker Cgroup Driver to systemd, enable and start Docker
sed -i '/^ExecStart/ s/$/ --exec-opt native.cgroupdriver=systemd/' /usr/lib/systemd/system/docker.service 
systemctl daemon-reload
systemctl enable docker --now

#Add the Kubernetes repo
cat <<EOF > /etc/yum.repos.d/kubernetes.repo
[kubernetes]
name=Kubernetes
baseurl=https://packages.cloud.google.com/yum/repos/kubernetes-el7-x86_64
enabled=1
gpgcheck=0
repo_gpgcheck=0
gpgkey=https://packages.cloud.google.com/yum/doc/yum-key.gpg
https://packages.cloud.google.com/yum/doc/rpm-package-key.gpg
EOF

#Install Kubernetes
yum install -y kubelet kubeadm kubectl


#Enable Kubernetes. The kubelet service will not start until you run kubeadm init
systemctl enable kubelet

kubeadm join 172.31.116.83:6443 --token dc9dx3.1cxxioj1vdxy4m4f     --discovery-token-ca-cert-hash sha256:cfc48cb53eb5709211e2b777266d96d3ced1c65076dd8d43ea3c7b5628eea62d --ignore-preflight-errors=all


#For  KubeMaster run these extra steps


#Initialize the cluster using the IP range for Flannel
kubeadm init --pod-network-cidr=10.244.0.0/16


#to run Kube without root
mkdir -p $HOME/.kube
sudo cp -i /etc/kubernetes/admin.conf $HOME/.kube/config
sudo chown $(id -u):$(id -g) $HOME/.kube/config


kubeadm join 172.31.116.83:6443 --token dc9dx3.1cxxioj1vdxy4m4f \ 
	--discovery-token-ca-cert-hash sha256:cfc48cb53eb5709211e2b777266d96d3ced1c65076dd8d43ea3c7b5628eea62d

#


#	Deploy Flannel for IP range
# kubectl apply -f https://raw.githubusercontent.com/coreos/flannel/master/Documentation/kube-flannel.yml


#status Check
kubectl get pods --all-namespaces


kubeadm join 172.31.116.83:6443 --token dc9dx3.1cxxioj1vdxy4m4f     --discovery-token-ca-cert-hash sha256:cfc48cb53eb5709211e2b777266d96d3ced1c65076dd8d43ea3c7b5628eea62d --ignore-preflight-errors=all



sudo kubeadm token create --print-join-command